{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaadams/Documents/BOM/src/Client/Pages/Profile/EventsAndOpportunities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Select from \"react-select\";\nimport EventsTile from './EventsTile';\nimport NoResults from '../../../Components/NoResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventsAndOpportunities = props => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [drpCateogory, setDrpCategory] = useState();\n  const [search, setSearch] = useState('');\n  const history = useHistory();\n  const [hasFilterData, setHasFilterData] = useState();\n  const [categoriesList, setCategoriesList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const categoriesResult = await axios('https://bomreactapi.azurewebsites.net/events/getcategories');\n        setCategoriesList(JSON.parse(categoriesResult.data));\n        console.log(categoriesResult.data);\n        const result = await axios('https://bomreactapi.azurewebsites.net/events/getevents');\n        setData(result.data); //setFilteredData(result.data);\n      } catch (error) {\n        setError(true);\n      }\n\n      setIsLoading(false); //console.log(data);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleCategoryChange = option => {\n    setDrpCategory({\n      drpCateogory: option.value\n    });\n  };\n\n  const handleSearchChange = option => {\n    setSearch(option.value);\n    let value = option.target.value.toLowerCase();\n    let result = data.filter(item => item[\"BP_Title\"].toLowerCase().includes(value) || item[\"BP_Description\"].toLowerCase().includes(value));\n    setFilteredData(arr => result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-row yellow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row pt-4 pb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 pt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"Select Categories\",\n                options: categoriesList,\n                id: \"drpCategory\",\n                value: drpCateogory,\n                onChange: setDrpCategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 pt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"search\",\n                type: \"text\",\n                maxLength: \"200\",\n                id: \"\",\n                className: \"form-control\",\n                placeholder: \"Search Events...\",\n                value: search,\n                onChange: handleSearchChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-row white\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"event-grid\",\n        children: [console.log(filteredData), filteredData && filteredData.length > 0 ? filteredData.map(singleEvent => /*#__PURE__*/_jsxDEV(EventsTile, {\n          Event: singleEvent,\n          Categories: categoriesList\n        }, singleEvent.EventsID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)) : filteredData ? /*#__PURE__*/_jsxDEV(NoResults, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 28\n        }, this) : data.map(singleEvent => /*#__PURE__*/_jsxDEV(EventsTile, {\n          Event: singleEvent,\n          Categories: categoriesList\n        }, singleEvent.EventsID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 1\n  }, this);\n};\n\n_s(EventsAndOpportunities, \"WCCCUg5NrfvtCrX8n1FmhJ4pLfU=\", false, function () {\n  return [useHistory];\n});\n\n_c = EventsAndOpportunities;\nexport default EventsAndOpportunities;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsAndOpportunities\");","map":{"version":3,"sources":["/Users/joshuaadams/Documents/BOM/src/Client/Pages/Profile/EventsAndOpportunities.js"],"names":["React","useState","useEffect","axios","useHistory","DataGrid","GridToolbar","Select","EventsTile","NoResults","EventsAndOpportunities","props","data","setData","filteredData","setFilteredData","isLoading","setIsLoading","error","setError","drpCateogory","setDrpCategory","search","setSearch","history","hasFilterData","setHasFilterData","categoriesList","setCategoriesList","fetchData","categoriesResult","JSON","parse","console","log","result","handleCategoryChange","option","value","handleSearchChange","target","toLowerCase","filter","item","includes","arr","length","map","singleEvent","EventsID"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport axios from \"axios\"\nimport { useHistory } from 'react-router-dom';\nimport { DataGrid , GridToolbar } from '@mui/x-data-grid';\nimport Select from \"react-select\";\nimport EventsTile from './EventsTile'\nimport NoResults from '../../../Components/NoResults'\n\n\nconst EventsAndOpportunities = (props) => {\n  const [data, setData] = useState([]);\n  const [filteredData,setFilteredData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [drpCateogory, setDrpCategory] = useState();\n  const [search, setSearch] = useState('');\n  const history = useHistory();\n  const [hasFilterData, setHasFilterData] = useState();\n  const [categoriesList, setCategoriesList] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try{\n          const categoriesResult = await axios('https://bomreactapi.azurewebsites.net/events/getcategories');\n          setCategoriesList(JSON.parse(categoriesResult.data));\n          console.log(categoriesResult.data);\n\n          const result = await axios(\n            'https://bomreactapi.azurewebsites.net/events/getevents',\n          );\n          setData(result.data);\n          //setFilteredData(result.data);\n      }\n        catch(error){\n        setError(true)\n      }\n \n      \n      setIsLoading(false);\n      //console.log(data);\n    };\n \n    fetchData();\n  }, []);\n\n  const handleCategoryChange = option => {\n    setDrpCategory({ drpCateogory: option.value});\n   }\n\n   const handleSearchChange = option => {\n       setSearch(option.value);\n       let value = option.target.value.toLowerCase();\n       let result = data.filter(item => \n        item[\"BP_Title\"].toLowerCase().includes(value) ||\n        item[\"BP_Description\"].toLowerCase().includes(value)\n       );\n        setFilteredData(arr => result);\n       \n   }\n\n\n  return (\n<div id=\"\">\n    <div className=\"full-row yellow\">\n        <div className=\"container-fluid\">\n            <div className=\"row pt-4 pb-4\">\n                <div className=\"col-md-6 pt-3\">\n                    <div className=\"form-group\">\n                        <Select placeholder=\"Select Categories\"  options={categoriesList} id=\"drpCategory\" value={drpCateogory} onChange={setDrpCategory}/>\n                    </div>\n                </div>\n                <div className=\"col-md-6 pt-3\">\n                    <div className=\"form-group\">\n                         <input name=\"search\" type=\"text\" maxLength=\"200\" id=\"\" className=\"form-control\" placeholder=\"Search Events...\" value={search} onChange={handleSearchChange} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div className=\"full-row white\">\n            <ul id=\"event-grid\">  \n            { console.log(filteredData)}   \n                { filteredData && filteredData.length > 0 ? (\n                    filteredData.map(singleEvent =>\n                        <EventsTile key={singleEvent.EventsID} Event={singleEvent} Categories={categoriesList}/>\n                    )\n\n                ) : \n                \n            filteredData ? <NoResults/> :\n                data.map(singleEvent =>\n                    <EventsTile key={singleEvent.EventsID} Event={singleEvent} Categories={categoriesList}/>\n                )  }\n                \n            </ul>\n    </div>\n </div>\n         ) \n}\n\n\n\nexport default EventsAndOpportunities;"]},"metadata":{},"sourceType":"module"}