{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaadams/Documents/BOM/src/Client/Pages/Profile/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport EventsTile from './EventsTile';\nimport { useSnackbar } from 'notistack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n  const [data, setData] = useState([]);\n  console.log(JSON.stringify(props));\n  const params = useParams();\n  const [contentLoaded, setContentLoaded] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const eventid = params.eventid;\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const result = await axios('https://bomreactapi.azurewebsites.net/events/geteventsinfo?eventid=' + eventid); //alert(JSON.stringify(fields));\n        //console.log(JSON.stringify(result.data));\n\n        if (result.data) {\n          setData(result.data);\n        } //alert(JSON.stringify(fields));\n\n\n        enqueueSnackbar('Event fetch success');\n      } catch (error) {\n        setError(true);\n        enqueueSnackbar('Event fetch failed');\n      }\n    };\n\n    if (!contentLoaded) {\n      fetchData();\n      setContentLoaded(true);\n      setIsLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-row yellow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row pt-4 pb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 pt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"Group\",\n                placeholder: \"Enter Group Name\",\n                id: \"GroupName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 pt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"search\",\n                type: \"text\",\n                maxLength: \"200\",\n                id: \"\",\n                className: \"form-control\",\n                placeholder: \"Search Events...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-row white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"event-grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Register, \"5O340hHPe/D4Cknp7H11Q/UFyyw=\", false, function () {\n  return [useSnackbar, useParams, useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/joshuaadams/Documents/BOM/src/Client/Pages/Profile/Register.js"],"names":["React","useState","useEffect","axios","useHistory","useParams","EventsTile","useSnackbar","Register","props","enqueueSnackbar","closeSnackbar","data","setData","console","log","JSON","stringify","params","contentLoaded","setContentLoaded","isLoading","setIsLoading","error","setError","eventid","history","fetchData","result"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport axios from \"axios\"\nimport { useHistory, useParams } from 'react-router-dom';\nimport EventsTile from './EventsTile'\nimport { useSnackbar } from 'notistack';\n\n\nconst Register = (props) => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const [data, setData] = useState([]);\n  console.log(JSON.stringify(props));\n  const params = useParams();\n  const [contentLoaded, setContentLoaded] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const eventid = params.eventid;\n  \n  const history = useHistory();\n \n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try{\n          const result = await axios(\n            'https://bomreactapi.azurewebsites.net/events/geteventsinfo?eventid=' + eventid,\n          );\n        //alert(JSON.stringify(fields));\n        //console.log(JSON.stringify(result.data));\n        if(result.data)\n        {\n          setData(result.data);\n        }\n        //alert(JSON.stringify(fields));\n        enqueueSnackbar('Event fetch success');\n      }\n        catch(error){\n        setError(true)\n        enqueueSnackbar('Event fetch failed');\n      }        \n    };\n\n    if(!contentLoaded){\n      \n      fetchData();\n      setContentLoaded(true);        \n      setIsLoading(false);\n    }\n}, []);\n\n\n  return (\n<div id=\"\">\n    <div className=\"full-row yellow\">\n        <div className=\"container-fluid\">\n            <div className=\"row pt-4 pb-4\">\n                <div className=\"col-md-6 pt-3\">\n                    <div className=\"form-group\">\n                        <input name=\"Group\"  placeholder=\"Enter Group Name\"  id=\"GroupName\" />\n                    </div>\n                </div>\n                <div className=\"col-md-6 pt-3\">\n                <div className=\"form-group\">\n                    <input name=\"search\" type=\"text\" maxLength=\"200\" id=\"\" className=\"form-control\" placeholder=\"Search Events...\"  />\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n    <div className=\"full-row white\">\n        <div className=\"container-fluid\">\n            <ul id=\"event-grid\">\n                \n              {   //data.map(singleEvent =>\n                    //<EventsTile key={singleEvent.EventsID} Event={singleEvent}/>\n                //)\n              }\n                \n            </ul>\n        </div>\n  </div>\n  </div>\n         ) \n}\n\n\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}