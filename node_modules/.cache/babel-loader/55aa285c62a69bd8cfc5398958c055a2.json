{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaadams/Documents/BOM/src/Components/CategoryHelper.js\";\nimport React from 'react';\nimport dompurify from 'dompurify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryHelper = props => {\n  var _props$Event, _props$Event$BP_Categ;\n\n  let catStrings = [];\n  let splitVals = props === null || props === void 0 ? void 0 : (_props$Event = props.Event) === null || _props$Event === void 0 ? void 0 : (_props$Event$BP_Categ = _props$Event.BP_Categories) === null || _props$Event$BP_Categ === void 0 ? void 0 : _props$Event$BP_Categ.split(';');\n\n  if (splitVals) {\n    splitVals.map(catid => {\n      var _props$Categories;\n\n      let cat = props === null || props === void 0 ? void 0 : (_props$Categories = props.Categories) === null || _props$Categories === void 0 ? void 0 : _props$Categories.find(x => x.CategoryID == catid);\n\n      if ((cat === null || cat === void 0 ? void 0 : cat.CategoryDisplayName) !== 'Events') {\n        catStrings.push(cat === null || cat === void 0 ? void 0 : cat.CategoryDisplayName);\n      }\n    });\n  }\n\n  return catStrings.map((catString, i) => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: catString\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 19\n    }, this);\n  });\n};\n\n_c = CategoryHelper;\nexport default CategoryHelper;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryHelper\");","map":{"version":3,"sources":["/Users/joshuaadams/Documents/BOM/src/Components/CategoryHelper.js"],"names":["React","dompurify","CategoryHelper","props","catStrings","splitVals","Event","BP_Categories","split","map","catid","cat","Categories","find","x","CategoryID","CategoryDisplayName","push","catString","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAC9B,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,SAAS,GAAGF,KAAH,aAAGA,KAAH,uCAAGA,KAAK,CAAEG,KAAV,0EAAG,aAAcC,aAAjB,0DAAG,sBAA6BC,KAA7B,CAAmC,GAAnC,CAAhB;;AACA,MAAGH,SAAH,EAAa;AACbA,IAAAA,SAAS,CAACI,GAAV,CAAeC,KAAD,IACd;AAAA;;AACI,UAAIC,GAAG,GAAGR,KAAH,aAAGA,KAAH,4CAAGA,KAAK,CAAES,UAAV,sDAAG,kBAAmBC,IAAnB,CAAwBC,CAAC,IAAGA,CAAC,CAACC,UAAF,IAAgBL,KAA5C,CAAV;;AACA,UAAG,CAAAC,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEK,mBAAL,MAA6B,QAAhC,EAAyC;AACrCZ,QAAAA,UAAU,CAACa,IAAX,CAAgBN,GAAhB,aAAgBA,GAAhB,uBAAgBA,GAAG,CAAEK,mBAArB;AACH;AACH,KANF;AAOC;;AAED,SACIZ,UAAU,CAACK,GAAX,CAAe,CAACS,SAAD,EAAWC,CAAX,KAAiB;AAC7B,wBAAO;AAAA,gBAAaD;AAAb,OAASC,CAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AACF,GAFD,CADJ;AAKH,CAlBD;;KAAMjB,c;AAoBN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport dompurify from 'dompurify'\n\nconst CategoryHelper = (props) => {\n    let catStrings = [];\n    let splitVals = props?.Event?.BP_Categories?.split(';');\n    if(splitVals){\n    splitVals.map((catid) => \n    {\n        let cat = props?.Categories?.find(x=> x.CategoryID == catid);\n        if(cat?.CategoryDisplayName !== 'Events'){\n            catStrings.push(cat?.CategoryDisplayName); \n        }    \n     });\n    }\n\n    return(\n        catStrings.map((catString,i) => {\n           return <li key={i}>{catString}</li>\n        })\n    )\n}\n\nexport default CategoryHelper;\n"]},"metadata":{},"sourceType":"module"}